{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/PM-Source/src/components/Comments/Comments/Comments.js\",\n    _s = $RefreshSig$();\n\n// REACT STATE\nimport { useState } from 'react'; // TIMESTAMP\n\nimport { timestamp } from '../../../firebase/config'; // useAuthContext\n\nimport { useAuthContext } from '../../../hooks/useAuthContext'; // useFirestore Hook\n\nimport { useFirestore } from '../../../hooks/useFirestore'; // AVATAR COMPONENT\n\nimport { Avatar } from '../../Avatar/Avatar'; // Date-FNS Imports\n\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comments = ({\n  project\n}) => {\n  _s();\n\n  const [newComment, setNewComment] = useState(''); //Get Current User\n\n  const {\n    user\n  } = useAuthContext(); //Update Document Method\n\n  const {\n    updateDocument,\n    response\n  } = useFirestore('projects'); // HANDLE SUBMIT METHOD\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const commentToAdd = {\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      content: newComment,\n      createdAt: timestamp.fromDate(new Date()),\n      id: Math.random().toString(36).replace('0.', 'comment_' || '')\n    };\n    setNewComment('');\n    await updateDocument(project.id, //We have to also keep older comments if there are any and add new comments on top of those\n    {\n      comments: [{ ...commentToAdd\n      }, ...project.comments]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comments\",\n      children: project.comments.length > 0 && project.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-author\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: comment.photoURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-date\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatDistanceToNow(comment.createdAt.toDate(), {\n                addSuffix: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-comment\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add new Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          onChange: e => setNewComment(e.target.value),\n          value: newComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: response.isPending,\n        style: {\n          cursor: response.isPending ? 'not-allowed' : 'pointer'\n        },\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comments, \"CFWy+qlebm+V/zhpMrsNvGbHJa8=\", false, function () {\n  return [useAuthContext, useFirestore];\n});\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/owner/Documents/PM-Source/src/components/Comments/Comments/Comments.js"],"names":["useState","timestamp","useAuthContext","useFirestore","Avatar","formatDistanceToNow","Comments","project","newComment","setNewComment","user","updateDocument","response","handleSubmit","e","preventDefault","commentToAdd","displayName","photoURL","content","createdAt","fromDate","Date","id","Math","random","toString","replace","comments","length","map","comment","toDate","addSuffix","target","value","isPending","cursor"],"mappings":"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","sourcesContent":["// REACT STATE\nimport {useState} from 'react';\n\n// TIMESTAMP\nimport {timestamp} from '../../../firebase/config'\n\n// useAuthContext\nimport {useAuthContext} from '../../../hooks/useAuthContext';\n\n// useFirestore Hook\nimport {useFirestore} from '../../../hooks/useFirestore';\n\n// AVATAR COMPONENT\nimport { Avatar } from '../../Avatar/Avatar';\n\n// Date-FNS Imports\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\nexport const Comments = ({project}) => {\n  const [newComment, setNewComment] = useState('');\n   //Get Current User\n   const {user} = useAuthContext();\n\n    //Update Document Method\n    const {updateDocument, response} = useFirestore('projects');\n  \n  // HANDLE SUBMIT METHOD\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    const commentToAdd = {\n        displayName: user.displayName,\n        photoURL: user.photoURL,\n        content: newComment,\n        createdAt: timestamp.fromDate(new Date()),\n        id: Math.random().toString(36).replace('0.', 'comment_' || '')\n    }\n    setNewComment('');\n    await updateDocument(project.id, \n        //We have to also keep older comments if there are any and add new comments on top of those\n        {comments: [{...commentToAdd}, ...project.comments]}\n    );\n  }\n\n  return (\n        <div className='project-comments'>\n            <h4>Comments</h4> \n            <ul className='comments'>\n                {project.comments.length > 0 && project.comments.map(comment => (\n                    <li key={comment.id}>\n                        <div className='comment-top'>\n                       <div className='comment-author'>\n                        <Avatar src={comment.photoURL}/>\n                        <p>{comment.displayName}</p>\n                       </div> \n                       <div className=\"comment-date\">\n                           <p>{formatDistanceToNow(comment.createdAt.toDate(), {addSuffix: true})}</p>\n                       </div>\n                       </div>\n                       <div className='comment-content'>\n                            <p>\n                                {comment.content}\n                            </p>\n                       </div>\n                    </li>\n                ))\n                }\n            </ul>\n            <form className='add-comment' onSubmit={handleSubmit}>\n                <label>\n                    <span>Add new Comment</span>\n                    <textarea \n                      required\n                      onChange={(e) => setNewComment(e.target.value)}\n                      value={newComment}\n                    >\n                    </textarea>\n                </label>\n                <button disabled={response.isPending} style={{\n                    cursor: response.isPending ? 'not-allowed' : 'pointer'\n                }}\n                className='btn'>Add Comment</button>\n            </form>\n        </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}