{"ast":null,"code":"var _s = $RefreshSig$();\n\n//React Imports\nimport { useEffect, useState } from 'react'; //Firestore db object\n\nimport { db } from \"../firebase/config\";\nexport const useDocument = (collection, documentId) => {\n  _s();\n\n  const [document, setDocument] = useState(null);\n  const [error, setError] = useState(null); //Real Time Data for the Document\n\n  useEffect(() => {\n    //Get a Reference to that document\n    const docRef = db.collection(collection).doc(documentId); //Listen for changes in that document\n\n    const unsub = docRef.onSnapshot(snapshot => {\n      //if the document reference has data or not\n      if (snapshot.data()) {\n        setDocument({ ...snapshot.data(),\n          id: snapshot.id\n        });\n        setError(null);\n      } else {\n        setError(\"No Such Project Exists!\");\n      }\n    }, error => {\n      console.log(error);\n      setError(\"Could not fetch the data!\");\n    });\n    return () => {\n      unsub();\n    };\n  }, [collection, documentId]);\n  return {\n    document,\n    error\n  };\n};\n\n_s(useDocument, \"5fYgyaP2tGC2FGNP8V8DRg51aRA=\");","map":{"version":3,"sources":["/Users/owner/Documents/PM-Source/src/hooks/useDocument.js"],"names":["useEffect","useState","db","useDocument","collection","documentId","document","setDocument","error","setError","docRef","doc","unsub","onSnapshot","snapshot","data","id","console","log"],"mappings":";;AAAA;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC,C,CAEA;;AACA,SAASC,EAAT,QAAmB,oBAAnB;AAGA,OAAO,MAAMC,WAAW,GAAG,CAACC,UAAD,EAAaC,UAAb,KAA4B;AAAA;;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CAFmD,CAInD;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMU,MAAM,GAAGR,EAAE,CAACE,UAAH,CAAcA,UAAd,EAA0BO,GAA1B,CAA8BN,UAA9B,CAAf,CAFY,CAGZ;;AACA,UAAMO,KAAK,GAAGF,MAAM,CAACG,UAAP,CAAkBC,QAAQ,IAAI;AACxC;AACA,UAAGA,QAAQ,CAACC,IAAT,EAAH,EAAmB;AACfR,QAAAA,WAAW,CAAC,EAAC,GAAGO,QAAQ,CAACC,IAAT,EAAJ;AAAqBC,UAAAA,EAAE,EAAEF,QAAQ,CAACE;AAAlC,SAAD,CAAX;AACAP,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAHD,MAGO;AACHA,QAAAA,QAAQ,CAAC,yBAAD,CAAR;AACH;AAEJ,KATa,EASXD,KAAK,IAAI;AACRS,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAC,MAAAA,QAAQ,CAAC,2BAAD,CAAR;AACH,KAZa,CAAd;AAcA,WAAO,MAAM;AACTG,MAAAA,KAAK;AACR,KAFD;AAIH,GAtBQ,EAsBP,CAACR,UAAD,EAAaC,UAAb,CAtBO,CAAT;AAwBA,SAAO;AAACC,IAAAA,QAAD;AAAWE,IAAAA;AAAX,GAAP;AACH,CA9BM;;GAAML,W","sourcesContent":["//React Imports\nimport {useEffect, useState} from 'react';\n\n//Firestore db object\nimport { db } from \"../firebase/config\"\n\n\nexport const useDocument = (collection, documentId) => {\n    const [document, setDocument] = useState(null);\n    const [error, setError] = useState(null);\n\n    //Real Time Data for the Document\n    useEffect(() => {\n        //Get a Reference to that document\n        const docRef = db.collection(collection).doc(documentId);\n        //Listen for changes in that document\n        const unsub = docRef.onSnapshot(snapshot => {\n            //if the document reference has data or not\n            if(snapshot.data()){\n                setDocument({...snapshot.data(), id: snapshot.id});\n                setError(null);\n            } else {\n                setError(\"No Such Project Exists!\");\n            }\n            \n        }, error => {\n            console.log(error);\n            setError(\"Could not fetch the data!\");\n        })\n\n        return () => {\n            unsub();\n        }\n\n    },[collection, documentId])\n\n    return {document, error}\n};\n"]},"metadata":{},"sourceType":"module"}