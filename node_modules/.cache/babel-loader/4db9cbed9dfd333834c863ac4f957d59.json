{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/PM-Source/src/context/ThemeContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [mode, setMode] = useState('light');\n\n  const changeMode = () => {\n    setMode(prevMode => {\n      return prevMode === 'light' ? 'dark' : 'light';\n    });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('mode')) {\n      setMode(localStorage.getItem('mode'));\n    }\n  }, []);\n  useEffect(() => {\n    if (mode === 'dark') {\n      document.body.classList.add('dark');\n    } else {\n      document.body.classList.remove('dark');\n    }\n\n    localStorage.setItem('mode', mode);\n  }, [mode]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      mode,\n      changeMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeContextProvider, \"4hfX6NKhd2mSR99oPoE1Lcms52A=\");\n\n_c = ThemeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"sources":["/Users/owner/Documents/PM-Source/src/context/ThemeContext.js"],"names":["createContext","useEffect","useState","ThemeContext","ThemeContextProvider","children","mode","setMode","changeMode","prevMode","localStorage","getItem","document","body","classList","add","remove","setItem"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AAEP,OAAO,MAAMI,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAEhD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,OAAD,CAAhC;;AAEA,QAAMM,UAAU,GAAG,MAAM;AACrBD,IAAAA,OAAO,CAACE,QAAQ,IAAI;AAChB,aAAOA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,OAAvC;AACH,KAFM,CAAP;AAGH,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACb,QAAGS,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAH,EAAgC;AAC3BJ,MAAAA,OAAO,CAACG,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAAP;AACJ;AACH,GAJQ,EAIP,EAJO,CAAT;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,IAAI,KAAK,MAAZ,EAAmB;AACfM,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,MAA5B;AACH,KAFD,MAEO;AACHH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,MAA/B;AACH;;AACDN,IAAAA,YAAY,CAACO,OAAb,CAAqB,MAArB,EAA6BX,IAA7B;AACH,GAPQ,EAOP,CAACA,IAAD,CAPO,CAAT;AASA,sBACA,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACA,MAAAA,IAAD;AAAOE,MAAAA;AAAP,KAA9B;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAKH,CA9BM;;GAAMD,oB;;KAAAA,oB","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nexport const ThemeContext = createContext();\n\nexport const ThemeContextProvider = ({children}) => {\n\n    const [mode, setMode] = useState('light');\n\n    const changeMode = () => {\n        setMode(prevMode => {\n            return prevMode === 'light' ? 'dark' : 'light';\n        })\n    }\n\n    useEffect(() => {\n       if(localStorage.getItem('mode')){\n            setMode(localStorage.getItem('mode'));\n       }\n    },[])\n\n    useEffect(() => {\n        if(mode === 'dark'){\n            document.body.classList.add('dark');\n        } else {\n            document.body.classList.remove('dark');\n        }\n        localStorage.setItem('mode', mode);\n    },[mode])\n\n    return (\n    <ThemeContext.Provider value={{mode, changeMode}}>\n        {children}\n    </ThemeContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}